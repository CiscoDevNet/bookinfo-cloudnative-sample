# Copyright Istio Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

##################################################################################################
# This file defines the services, service accounts, and deployments for the Bookinfo sample.
#
# To apply all 4 Bookinfo services, their corresponding service accounts, and deployments:
#
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml
#
# Alternatively, you can deploy any resource separately:
#
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -l service=reviews # reviews Service
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -l account=reviews # reviews ServiceAccount
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -l app=reviews,version=v3 # reviews-v3 Deployment
##################################################################################################

##################################################################################################
# Details service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: details
  labels:
    app: details
    service: details
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: details
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-details
  labels:
    account: details
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: details-v1
  labels:
    app: details
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: details
      version: v1
  template:
    metadata:
      labels:
        app: details
        version: v1
    spec:
      serviceAccountName: bookinfo-details
      containers:
      - name: details
        image: ciscodevcloud/examples-bookinfo-details-v1:1.0.0
        imagePullPolicy: IfNotPresent
        env:
          - name: APPD_APP_NAME
            value: bookinfo
          - name: APPD_TIER_NAME
            value: details
          - name: APPD_NODE_NAME
            value: details-v1
          - name: APPD_CONTROLLER_HOST
            valueFrom:
              configMapKeyRef:
                key: APPDYNAMICS_CONTROLLER_HOST_NAME
                name: appd-agent-envs
          - name: APPD_CONTROLLER_PORT
            value: "443"
          - name: APPD_CONTROLLER_USE_SSL
            value: "true"
          - name: APPD_CONTROLLER_ACCOUNT
            valueFrom:
              configMapKeyRef:
                key: APPDYNAMICS_AGENT_ACCOUNT_NAME
                name: appd-agent-envs
          - name: APPD_CONTROLLER_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: access-key
                name: appd-agent-secret
          - name: APPD_CONTROLLER_LOG_DIR
            value: /tmp/appd/
          - name: APPD_NODEINDEX_PATH
            value: "/tmp/appdynamics/nodeindex"
        ports:
        - containerPort: 9080
        securityContext:
          runAsUser: 1000
---
##################################################################################################
# Ratings service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: ratings
  labels:
    app: ratings
    service: ratings
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: ratings
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-ratings
  labels:
    account: ratings
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings-v1
  labels:
    app: ratings
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings
      version: v1
  template:
    metadata:
      labels:
        app: ratings
        version: v1
    spec:
      serviceAccountName: bookinfo-ratings
      containers:
      - name: ratings
        image: ciscodevcloud/examples-bookinfo-ratings-v1:1.0.0
        imagePullPolicy: IfNotPresent
        env:
          - name: APPDYNAMICS_CONTROLLER_HOST_NAME
            valueFrom:
              configMapKeyRef:
                key: APPDYNAMICS_CONTROLLER_HOST_NAME
                name: appd-agent-envs
          - name: APPDYNAMICS_CONTROLLER_PORT
            value: "443"
          - name: APPDYNAMICS_CONTROLLER_SSL_ENABLED
            value: "true"
          - name: APPDYNAMICS_AGENT_APPLICATION_NAME
            value: bookinfo
          - name: APPDYNAMICS_AGENT_NODE_NAME
            value: ratings-v1
          - name: APPDYNAMICS_AGENT_TIER_NAME
            value: ratings
          - name: APPDYNAMICS_AGENT_ACCOUNT_NAME
            valueFrom:
              configMapKeyRef:
                key: APPDYNAMICS_AGENT_ACCOUNT_NAME
                name: appd-agent-envs
          - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: access-key
                name: appd-agent-secret
        ports:
        - containerPort: 9080
        securityContext:
          runAsUser: 1000
---

##################################################################################################
# Reviews service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: reviews
  labels:
    app: reviews
    service: reviews
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: reviews
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-reviews
  labels:
    account: reviews
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v1
  labels:
    app: reviews
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v1
  template:
    metadata:
      labels:
        app: reviews
        version: v1
    spec:
      serviceAccountName: bookinfo-reviews
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: reviews
          image: ciscodevcloud/examples-bookinfo-reviews-v1:1.0.0
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: appd-agent-envs
          env:
            - name: LOG_DIR
              value: "/tmp/logs"
            - name: APPDYNAMICS_AGENT_TIER_NAME
              value: "reviews"
            - name: APPDYNAMICS_AGENT_NODE_NAME
              value: "reviews-v1"
            - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: appd-agent-secret
                  key: access-key
          ports:
            - containerPort: 9080
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: wlp-output
              mountPath: /opt/ibm/wlp/output
            - name: appd-agent-repo
              mountPath: /opt/appdynamics
          securityContext:
            runAsUser: 1000
      volumes:
        - name: wlp-output
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: appd-agent-repo
          emptyDir: {}
      initContainers:
        - command:
            - cp
            - -r
            - /opt/appdynamics/.
            - /opt/temp
          name: appd-agent
          image: docker.io/appdynamics/java-agent:20.8.0
          volumeMounts:
            - mountPath: /opt/temp
              name: appd-agent-repo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v2
  labels:
    app: reviews
    version: v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v2
  template:
    metadata:
      labels:
        app: reviews
        version: v2
    spec:
      serviceAccountName: bookinfo-reviews
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: reviews
          image: ciscodevcloud/examples-bookinfo-reviews-v2:1.0.0
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: appd-agent-envs
          env:
            - name: LOG_DIR
              value: "/tmp/logs"
            - name: APPDYNAMICS_AGENT_TIER_NAME
              value: "reviews"
            - name: APPDYNAMICS_AGENT_NODE_NAME
              value: "reviews-v2"
            - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: appd-agent-secret
                  key: access-key
          ports:
            - containerPort: 9080
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: wlp-output
              mountPath: /opt/ibm/wlp/output
            - name: appd-agent-repo
              mountPath: /opt/appdynamics
          securityContext:
            runAsUser: 1000
      volumes:
        - name: wlp-output
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: appd-agent-repo
          emptyDir: {}
      initContainers:
        - command:
            - cp
            - -r
            - /opt/appdynamics/.
            - /opt/temp
          name: appd-agent
          image: docker.io/appdynamics/java-agent:20.8.0
          volumeMounts:
            - mountPath: /opt/temp
              name: appd-agent-repo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v3
  labels:
    app: reviews
    version: v3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews
      version: v3
  template:
    metadata:
      labels:
        app: reviews
        version: v3
    spec:
      serviceAccountName: bookinfo-reviews
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: reviews
          image: ciscodevcloud/examples-bookinfo-reviews-v3:1.0.0
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: appd-agent-envs
          env:
            - name: LOG_DIR
              value: "/tmp/logs"
            - name: APPDYNAMICS_AGENT_TIER_NAME
              value: "reviews"
            - name: APPDYNAMICS_AGENT_NODE_NAME
              value: "reviews-v3"
            - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: appd-agent-secret
                  key: access-key
          ports:
            - containerPort: 9080
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: wlp-output
              mountPath: /opt/ibm/wlp/output
            - name: appd-agent-repo
              mountPath: /opt/appdynamics
          securityContext:
            runAsUser: 1000
      volumes:
        - name: wlp-output
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: appd-agent-repo
          emptyDir: {}
      initContainers:
        - command:
            - cp
            - -r
            - /opt/appdynamics/.
            - /opt/temp
          name: appd-agent
          image: docker.io/appdynamics/java-agent:20.8.0
          volumeMounts:
            - mountPath: /opt/temp
              name: appd-agent-repo
---
##################################################################################################
# Productpage services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: productpage
  labels:
    app: productpage
    service: productpage
spec:
  ports:
    - port: 9080
      name: http
  selector:
    app: productpage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-productpage
  labels:
    account: productpage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productpage-v1
  labels:
    app: productpage
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productpage
      version: v1
  template:
    metadata:
      labels:
        app: productpage
        version: v1
    spec:
      serviceAccountName: bookinfo-productpage
      containers:
        - name: productpage
          image: ciscodevcloud/examples-bookinfo-productpage-v1:1.0.0
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: appd-agent-envs
          env:
            - name: APPDYNAMICS_AGENT_TIER_NAME
              value: "productpage"
            - name: APPDYNAMICS_AGENT_NODE_NAME
              value: "productpage-v1"
            - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: appd-agent-secret
                  key: access-key
          ports:
            - containerPort: 9080
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          securityContext:
            runAsUser: 1000
      volumes:
        - name: tmp
          emptyDir: {}
---
